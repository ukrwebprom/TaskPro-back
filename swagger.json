{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Pro",
    "version": "1.0.0",
    "description": "Welcome to TaskPro - a fantastic application developed by a team of young developers as our graduation project. So please be lenient in your judgment, as we put a lot of effort into it. TaskPro is designed to help you stay organized, whether it's in your professional workspace or personal life. It provides user authentication functionality, allowing users to create boards where they can organize their tasks into columns. The application offers a wide range of features related to boards and tasks, including the creation, updating, and deletion of boards, columns, and tasks. Users can also move tasks between columns for better organization. Additionally, TaskPro offers three different themes to choose from and the ability to customize the background of your boards. Our main goal was to provide an intuitive and user-friendly interface to enhance your productivity and help you achieve your goals effectively. We hope we have succeeded in creating a beautiful and functional application."
  },
  "servers": [
    {
      "url": "http://taskpro-41yf.onrender.com",
      "description": "Backend server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints related to users"
    },
    {
      "name": "Boards",
      "description": "Endpoints related to boards"
    },
    {
      "name": "Columns",
      "description": "Endpoints related to columns"
    },
    {
      "name": "Tasks",
      "description": "Endpoints related to tasks"
    },
    {
      "name": "Support",
      "description": "Endpoint for sending emails to support"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Register new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Successful registration"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email in use"
          },
          "400": {
            "description": "Missing fields in request body"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse",
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Wrong email or password"
          },
          "400": {
            "description": "Missing fields in request body"
          }
        }
      }
    },
    "/user/refresh": {
      "post": {
        "summary": "Refresh user's token",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful refresh",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse",
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Token invalid"
          },
          "400": {
            "description": "Missing fields in request body"
          }
        }
      }
    },
    "/user/google": {
      "get": {
        "summary": "Register user by google",
        "tags": ["Users"]
      }
    },
    "/user/google/callback": {
      "get": {
        "summary": "Refresh google user's token",
        "tags": ["Users"],
        "responses": {
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to redirect to contains token and refreshToken in path"
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "summary": "Check user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse",
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Bearer Token, missing header, invalid token"
          }
        }
      }
    },
    "/user/theme": {
      "patch": {
        "summary": "Update user's theme",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UserThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "theme": {
                      "type": "string",
                      "description": "User's updated theme",
                      "example": "dark"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Bearer Token, missing header, invalid token"
          },
          "400": {
            "description": "Missing fields in request body"
          },
          "404": {
            "description": "User is not found"
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "summary": "Update user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Bearer Token, missing header, invalid token"
          },
          "400": {
            "description": "Missing fields in request body"
          },
          "404": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "summary": "User's logout",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "Bearer authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful logout"
          },
          "401": {
            "description": "Problem with authorization"
          }
        }
      }
    },
    "/boards": {
      "get": {
        "summary": "Get all boards with columns and tasks",
        "tags": ["Boards"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/AllBoardsWithColumnsAndTasksResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          }
        }
      },
      "post": {
        "summary": "Add new board",
        "tags": ["Boards"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/AddingNewBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New board created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AddingNewBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          }
        }
      }
    },
    "/boards/{boardId}": {
      "put": {
        "summary": "Update board",
        "tags": ["Boards"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "boardId",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UpdateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Successful update"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Board id (from params) not found"
          }
        }
      },
      "patch": {
        "summary": "Update board background",
        "tags": ["Boards"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "boardId",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UpdateBackgroundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Background updated"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Board id (from params) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete board",
        "tags": ["Boards"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "boardId",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Board deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "404": {
            "description": "Board id (from params) not found"
          }
        }
      }
    },
    "/columns": {
      "post": {
        "summary": "Add new column",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/AddingNewColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New column created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AddingNewColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          }
        }
      }
    },
    "/columns/{columnId}": {
      "patch": {
        "summary": "Update column title",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "columnId",
            "in": "path",
            "description": "Column ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ColumnTitleUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Successful update"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete column",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "columnId",
            "in": "path",
            "description": "Column ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Column deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      }
    },
    "/columns/{columnId}/tasks": {
      "post": {
        "summary": "Add task to column",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "columnId",
            "in": "path",
            "description": "Column ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/AddNewTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New task created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AddNewTaskResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      }
    },
    "/columns/{columnId}/order": {
      "patch": {
        "summary": "Reorder the column",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "columnId",
            "in": "path",
            "description": "Column ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ChangeColumnOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful reorder",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Column reordered",
                      "example": "Order changed"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      }
    },

    "/tasks/{taskId}": {
      "put": {
        "summary": "Update task",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/TaskUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Task updated"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Task id (from params) not found"
          }
        }
      },
      "patch": {
        "summary": "Move task to another column",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/MoveTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Task moved"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "TaskId (from params) not found or columnId from (body) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete task",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "User authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Task deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      }
    },
    "/support": {
      "post": {
        "summary": "Sending email to support",
        "tags": ["Support"],
        "parameters": [
          {
            "name": "Authorization Token",
            "in": "header",
            "description": "Bearer authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/SupportRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Message sent"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Duka"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "duka@mail.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 32,
            "description": "User's password",
            "example": "pwd1234567"
          }
        },
        "required": ["email", "password", "name"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "duka@mail.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 32,
            "description": "User's password",
            "example": "pwd1234567"
          }
        },
        "required": ["email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTVlOWFjMTJiZjlhYWIyMmJhMGE4MCIsImlhdCI6MTY4ODA1OTkwMSwiZXhwIjoxNjg4MTQ2MzAxfQ.6kT1_mUJQp4f1H_c7GklH1WK4Q_IUv6-7MJ5wjgnLQI"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Duka"
          },
          "theme": {
            "type": "string",
            "enum": ["light", "dark", "violet"],
            "description": "User's theme",
            "example": "dark"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "User's refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
          }
        },
        "required": "refreshToken"
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTVlOWFjMTJiZjlhYWIyMmJhMGE4MCIsImlhdCI6MTY4ODA1OTkwMSwiZXhwIjoxNjg4MTQ2MzAxfQ.6kT1_mUJQp4f1H_c7GklH1WK4Q_IUv6-7MJ5wjgnLQI"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Duka"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "duka@mail.com"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar"
          },
          "theme": {
            "type": "string",
            "enum": ["light", "dark", "violet"],
            "description": "User's theme",
            "example": "dark"
          }
        }
      },
      "UserThemeRequest": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["dark", "light", "violet"],
            "example": "violet"
          }
        },
        "required": "theme"
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "User's avatar file"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Duka"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "duka@mail.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 32,
            "description": "User's password",
            "example": "pwd1234567"
          }
        },
        "required": ["name", "email", "password"]
      },
      "UserUpdateResponse": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": ["string", "null"],
            "nullable": true,
            "description": "URL or null",
            "example": "https://res.cloudinary.com/pro-task-cloud/image/upload/v1687533126/avatars/y8y1fx9pg7qmjyik3vgo.png"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Duka"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "duka@mail.com"
          }
        }
      },
      "AllBoardsWithColumnsAndTasksResponse": {
        "type": "array",
        "items": {
          "properties": {
            "_id": {
              "type": "string",
              "description": "Board Id",
              "example": "5f86793b8a7c4d2e"
            },
            "title": {
              "type": "string",
              "description": "Title of the board",
              "example": "My board"
            },
            "icon": {
              "type": "string",
              "description": "Icon name for this board",
              "example": "star"
            },
            "background": {
              "type": ["null", "string"],
              "nullable": true,
              "description": "Board background(string/null)",
              "example": null
            },
            "user": {
              "type": "string",
              "description": "User's id to whom this board refer (generated by backend)",
              "example": "5f86793b8a7c4d2e"
            },
            "columns": {
              "type": "array",
              "properties": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Column Id",
                    "example": "649885bb8cfd32ed13fd42d3"
                  },
                  "title": {
                    "type": "string",
                    "description": "Column title",
                    "example": "To do"
                  },
                  "board": {
                    "type": "string",
                    "description": "BoardId to which the columns refers",
                    "example": "649885bb8cfd32ed13fd42d3"
                  },
                  "order": {
                    "type": "number",
                    "description": "Column order",
                    "example": 4
                  },
                  "tasks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Task Id",
                          "example": "649885bb8cfd32ed13fd42d3"
                        },
                        "title": {
                          "type": "string",
                          "description": "Task title",
                          "example": "To buy some food"
                        },
                        "description": {
                          "type": "string",
                          "description": "Task description",
                          "example": "Bread, meat and bla bla bla or dubi dubi dubi"
                        },
                        "priority": {
                          "type": "string",
                          "enum": ["low", "medium", "high", "none"],
                          "description": "Task priority",
                          "example": "high"
                        },
                        "deadline": {
                          "type": "string",
                          "description": "Task deadline",
                          "example": "2023-07-21T20:57:15.000Z"
                        },
                        "order": {
                          "type": "number",
                          "description": "Task order",
                          "example": 4
                        },
                        "column": {
                          "type": "string",
                          "description": "ColumnId to which the task refers"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "example": {
            "example1": {
              "value": [
                {
                  "_id": "6499fc7f8f5b7f86f156a98d",
                  "title": "Team project",
                  "icon": "computer",
                  "background": null,
                  "user": "64942b28312cf3abea116334",
                  "columns": [
                    {
                      "_id": "6499fd028f5b7f86f156a990",
                      "title": "layout",
                      "board": "6499fc7f8f5b7f86f156a98d",
                      "order": 0,
                      "tasks": [
                        {
                          "_id": "649b55ecdd5a42896aae372a",
                          "title": "sidebar layout",
                          "description": "blablablabla",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "order": 0,
                          "column": "6499fd028f5b7f86f156a990"
                        },
                        {
                          "_id": "649b55f7dd5a42896aae3731",
                          "title": "dashboard layout",
                          "description": "blablablabla",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "order": 1,
                          "column": "6499fd028f5b7f86f156a990"
                        }
                      ]
                    },
                    {
                      "_id": "6499fd0d8f5b7f86f156a993",
                      "title": "back",
                      "board": "6499fc7f8f5b7f86f156a98d",
                      "order": 1,
                      "tasks": [
                        {
                          "_id": "649b5603dd5a42896aae3738",
                          "title": "routes",
                          "description": "blablablabla",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "order": 0,
                          "column": "6499fd0d8f5b7f86f156a993"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_id": "649ca3c0efe66a4b29e011fb",
                  "title": "My favourite project",
                  "icon": "star",
                  "background": null,
                  "user": "64942b28312cf3abea116334",
                  "columns": []
                },
                {
                  "_id": "649ca3deefe66a4b29e011fe",
                  "title": "My unrealistic project",
                  "icon": "star",
                  "background": null,
                  "user": "64942b28312cf3abea116334",
                  "columns": [
                    {
                      "_id": "649ca4e4efe66a4b29e01205",
                      "title": "Believe in good people, love and miracles",
                      "board": "649ca3deefe66a4b29e011fe",
                      "order": 0,
                      "tasks": []
                    },
                    {
                      "_id": "649ca4fcefe66a4b29e01208",
                      "title": "Live forever",
                      "board": "649ca3deefe66a4b29e011fe",
                      "order": 1,
                      "tasks": []
                    },
                    {
                      "_id": "649ca526efe66a4b29e0120b",
                      "title": "Back to Ukraine",
                      "board": "649ca3deefe66a4b29e011fe",
                      "order": 2,
                      "tasks": [
                        {
                          "_id": "649ca578efe66a4b29e0120f",
                          "title": "wash away all occupants",
                          "description": "tra ta ta ta",
                          "priority": "high",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "order": 0,
                          "column": "649ca526efe66a4b29e0120b"
                        },
                        {
                          "_id": "649ca59defe66a4b29e01216",
                          "title": "live peaceful life",
                          "description": "ahhhhhhh",
                          "priority": "high",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "order": 1,
                          "column": "649ca526efe66a4b29e0120b"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "AddingNewBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "My project"
          },
          "icon": {
            "type": "string",
            "description": "Board icon name",
            "example": "star"
          },
          "background": {
            "type": ["string", "null"],
            "description": "Board background(string/null)",
            "example": null
          }
        },
        "required": ["title", "icon"]
      },
      "AddingNewBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Board ID (generated by backend)",
            "example": "5f86793b8a7c4d2e"
          }
        }
      },
      "UpdateBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "My project"
          },
          "icon": {
            "type": "string",
            "description": "Board icon name",
            "example": "star"
          },
          "background": {
            "type": ["string", "null"],
            "description": "Board background(url/null)",
            "example": null
          }
        },
        "required": ["title", "icon", "background"]
      },
      "UpdateBackgroundRequest": {
        "type": "object",
        "properties": {
          "background": {
            "type": ["string", "null"],
            "description": "Board background(string/null)",
            "example": null
          }
        },
        "required": "background"
      },
      "AddingNewColumnRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Column title",
            "example": "To do"
          },
          "board": {
            "type": "string",
            "description": "BoardId to which the column refer",
            "example": "649885bb8cfd32ed13fd42d3"
          }
        },
        "required": ["title", "board"]
      },
      "AddingNewColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Column ID (generated by backend)",
            "example": "5f86793b8a7c4d2e"
          },
          "title": {
            "type": "string",
            "description": "Column title",
            "example": "To do"
          },
          "board": {
            "type": "string",
            "description": "BoardId to which the column refer",
            "example": "649885bb8cfd32ed13fd42d3"
          },
          "order": {
            "type": "number",
            "description": "Column's order (generated by backend)",
            "example": 3
          }
        }
      },
      "ColumnTitleUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Column title",
            "example": "Done"
          }
        },
        "required": "title"
      },
      "AddNewTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Figure out what is swagger"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Я - умничка, сладкая булочка и прочитаю доки до сваггера))"
          },
          "deadline": {
            "type": "string",
            "description": "Task deadline",
            "example": "2023-07-21T20:57:15.000Z"
          },
          "priority": {
            "type": "string",
            "enum": ["high", "low", "medium", "none"],
            "default": "none",
            "description": "Task priority",
            "example": "high"
          }
        },
        "required": ["title", "description", "deadline"]
      },
      "AddNewTaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Task ID (generated by backend)",
            "example": "5f86793b8a7c4d2e"
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Figure out what is swagger"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Я - умничка, сладкая булочка и прочитаю доки до сваггера))"
          },
          "deadline": {
            "type": "string",
            "description": "Task deadline",
            "example": "2023-07-21T20:57:15.000Z"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "high"
          },
          "column": {
            "type": "string",
            "description": "ColumnId to which task refer ",
            "example": "649885bb8cfd32ed13fd42d3"
          },
          "order": {
            "type": "number",
            "description": "Task's order (generated by backend)",
            "example": 0
          }
        }
      },
      "ChangeColumnOrderRequest": {
        "type": "object",
        "properties": {
          "newOrder": {
            "type": "number",
            "description": "Column's new order",
            "example": 2
          }
        },
        "required": "newOrder"
      },
      "TaskUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Figure out what is swagger"
          },
          "description": {
            "type": "string",
            "description": "Title description",
            "example": "Я - умничка, сладкая булочка и прочитаю доки до сваггера, а также протестирую swagger editor"
          },
          "deadline": {
            "type": "string",
            "description": "Task deadline",
            "example": "22.07.2023"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "low"
          },
          "column": {
            "type": "string",
            "description": "ColumnId to which task refer",
            "example": "649885bb8cfd32ed13fd42d3"
          }
        },
        "required": ["title", "description", "deadline", "priority", "column"]
      },
      "MoveTaskRequest": {
        "type": "object",
        "properties": {
          "column": {
            "type": "string",
            "description": "ColumnId to which task refer",
            "example": "649885bb8cfd32ed13fd42d3"
          },
          "newOrder": {
            "type": "number",
            "description": "New task order",
            "example": 3
          }
        },
        "required": ["column"]
      },
      "SupportRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "test@mail.com"
          },
          "message": {
            "type": "string",
            "description": "Message to support",
            "example": "I'm using TaskPro for a while and it's gonna be great if I could upload my own background."
          }
        },
        "required": ["email", "message"]
      }
    }
  }
}
